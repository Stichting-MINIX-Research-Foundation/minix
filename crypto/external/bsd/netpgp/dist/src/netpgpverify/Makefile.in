# $NetBSD: Makefile.in,v 1.11 2017/04/17 19:50:28 agc Exp $

PROG=netpgpverify

OBJS= b64.o bignum.o bufgap.o digest.o
OBJS+= libverify.o main.o misc.o
OBJS+= pgpsum.o rsa.o

OBJS+= bzlib.o zlib.o

OBJS+= sha1.o sha2.o md5c.o rmd160.o

PREFIX=@PREFIX@
MANDIR=@MANDIR@

all: ${PROG}

${PROG}: ${OBJS}
	${CC} ${OBJS} -o ${PROG}

install:
	install -c -s ${PROG} ${DESTDIR}${PREFIX}/bin
	install -c netpgpverify.1 ${DESTDIR}${MANDIR}/man1

tst:
	./${PROG} -k pubring.gpg NetBSD-6.0_RC1_hashes.asc
	./${PROG} -k pubring.gpg NetBSD-6.0_RC1_hashes.gpg
	./${PROG} -v
	./${PROG} -S sshtest-20140202.pub data.gpg
	./${PROG} -S sshtest-20140202.pub data.sig
	@echo "expected failure, to check bad signatures fail to verify"
	-sed -e 's|A|B|' data.gpg | ./${PROG} -S sshtest-20140202.pub
	@echo ""
	@echo "expected failure, no valid key for verification"
	-./${PROG} -k /dev/null NetBSD-6.0_RC1_hashes.gpg
	@echo "dumping now"
	./${PROG} -c dump -k pubring.gpg NetBSD-6.0_RC1_hashes.asc > /dev/null
	@echo "dumping ssh now"
	./${PROG} -c dump -S sshtest-20140202.pub data.gpg
	@echo "testing pubring with one key"
	uudecode 1keytest.gpg.uu
	./${PROG} -k 1keypubring.gpg 1keytest.gpg
	rm -f 1keytest.gpg
	@echo "testing signing with a subkey"
	./chk.sh -k joyent-pubring.gpg digest-20121220.tgz
	@echo "testing signatures with version"
	./${PROG} -k pubring.gpg version.asc
	@echo "testing signatures with no version"
	./${PROG} -k pubring.gpg noversion.asc
	@echo "testing dash-escaped text"
	./${PROG} -k pubring.gpg dash-escaped-text.asc

clean:
	rm -rf *.core ${OBJS} ${PROG}
cleandist:
	rm -rf *.core ${OBJS} ${PROG} Makefile
