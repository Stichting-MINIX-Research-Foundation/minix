.\" $Id: runidn.1,v 1.1.1.1 2003-06-04 00:27:14 marka Exp $
.\"
.\" Copyright (c) 2000,2001 Japan Network Information Center.
.\" All rights reserved.
.\"  
.\" By using this file, you agree to the terms and conditions set forth bellow.
.\" 
.\" 			LICENSE TERMS AND CONDITIONS 
.\" 
.\" The following License Terms and Conditions apply, unless a different
.\" license is obtained from Japan Network Information Center ("JPNIC"),
.\" a Japanese association, Kokusai-Kougyou-Kanda Bldg 6F, 2-3-4 Uchi-Kanda,
.\" Chiyoda-ku, Tokyo 101-0047, Japan.
.\" 
.\" 1. Use, Modification and Redistribution (including distribution of any
.\"    modified or derived work) in source and/or binary forms is permitted
.\"    under this License Terms and Conditions.
.\" 
.\" 2. Redistribution of source code must retain the copyright notices as they
.\"    appear in each source code file, this License Terms and Conditions.
.\" 
.\" 3. Redistribution in binary form must reproduce the Copyright Notice,
.\"    this License Terms and Conditions, in the documentation and/or other
.\"    materials provided with the distribution.  For the purposes of binary
.\"    distribution the "Copyright Notice" refers to the following language:
.\"    "Copyright (c) 2000-2002 Japan Network Information Center.  All rights reserved."
.\" 
.\" 4. The name of JPNIC may not be used to endorse or promote products
.\"    derived from this Software without specific prior written approval of
.\"    JPNIC.
.\" 
.\" 5. Disclaimer/Limitation of Liability: THIS SOFTWARE IS PROVIDED BY JPNIC
.\"    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\"    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
.\"    PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL JPNIC BE LIABLE
.\"    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\"    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\"    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\"    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\"    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\"    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\"    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
.\"
.TH RUNIDN 1 "April 6, 2001"
.\"
.SH NAME
runidn \- A script to allow applications to use internationalized domain names.
.\"
.SH SYNOPSIS
\fBrunidn\fP [\fB-e\fP \fIlocal-codeset\fP] \fIprogram-name\fP [\fIargs..\fP]
.\"
.SH DESCRIPTION
\fBrunidn\fP enables applications to use internationalized domain names
without recompilation.
Just add ``runidn'' before the application-name, and the application
can handle non-ASCII domain names.  For example, you can do:
.PP
.RS 4
.nf
\f(CW% runidn telnet \fInon-ASCII-hostname\fR
.fi
.RE
.PP
Before using runidn, you should set up properties related to
internationalized DNS by configuring idnkit's configuration file
\fBidn.conf\fP.
See idn.conf(5) which describes the configuration.
.\"
.SH OPTION
The following option is available:
.TP 4
\fB\-e\fP \fIlocal-codeset\fP
Specify the application's local codeset.
If the option is not specified, \fBrunidn\fR guesses the codeset
from the current locale.
See the ``NOTE'' section for more details about local codeset.
.\"
.SH IMPLEMENTATION
\fBrunidn\fR is a small shell script that sets up an environment variable
called ``LD_PRELOAD'', so that an application dynamically links a shared
library ``libidnkitres'' before any other shared libraries.
.PP
The library ``libidnkitres'' provides a special version of resolver
functions which implement features for handling internationalized
domain names.
\fBrunidn\fR replaces the following functions with the special version:
.PP
.RS 4
.nf
.ft CW
gethostbyname
gethostbyname2
gethostbyaddr
gethostbyname_r
gethostbyname2_r
gethostbyaddr_r
getipnodebyname
getipnodebyaddr
freehostent
getaddrinfo
freeaddrinfo
getnameinfo
.ft R
.fi
.RE
.PP
By overriding them in the standard libraries with the special version
provided by ``libidnkitres'',
\fBrunidn\fR enables applications to use internationalized domain names.
.RS 4
.IP \(bu 2
These API functions accept non-ASCII domain names encoded
in the local codeset that the application is using.
Also the result from these APIs may contain non-ASCII domain names.
.IP \(bu 2
The normalization and codeset conversion between application's local
codeset and the codeset used in DNS protocol data are handled
automatically, so users/applications need not worry about them.
.RE
.PP
Properties of internationalized DNS (such as the normalization or
the codeset used on DNS protocol data) can be configured with the
idnkit's configuration file (\fBidn.conf\fR).
See idn.conf(5) for details.
.\"
.SH NOTE
Unless \fB\-e\fP option is specified, \fBrunidn\fR tries to guess
the application's local codeset from the application's current locale.
However, sometimes it cannot guess the codeset correctly, for example
if the application does not set the locale appropriately by calling
`setlocale()'.
In that case, you can explicitly specify the local codeset by setting an
environment variable ``IDN_LOCAL_CODESET''.
See the section ``LOCAL CODESET'' in idn.conf(5) for details.
.PP
The idea of using ``LD_PRELOAD'' to replace some functions in the standard
library was taken from ``runsocks'' script distributed as part of SOCKS5
reference implementation.
.SH BUGS
There are many cases where \fBrunidn\fR does not work.
.PP
Your system must support ``LD_PRELOAD'' mechanism in the first place.
.PP
Due to security reasons, ``LD_PRELOAD'' mechanism is disabled for
setuid programs in any sane systems.
So \fBrunidn\fR does not work for setuid programs such as ping or rsh.
.PP
If your application uses a function other than the ones runidn supports for
name resolution, you lose.
.SH "SEE ALSO"
idn.conf(5), runsocks(1)
