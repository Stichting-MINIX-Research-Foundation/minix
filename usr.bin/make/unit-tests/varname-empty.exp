Var_Parse: ${:U} (eval)
Applying ${:U} to "" (eval, none, undefined)
Result of ${:U} is "" (eval, none, defined)
Var_Set("${:U}", "cmdline-u", ...) name expands to empty string - ignored
Var_Set("", "cmdline-plain", ...) name expands to empty string - ignored
Global:.CURDIR = <curdir>
Var_Parse: ${MAKE_OBJDIR_CHECK_WRITABLE:U} (eval)
Applying ${MAKE_OBJDIR_CHECK_WRITABLE:U} to "" (eval, none, undefined)
Result of ${MAKE_OBJDIR_CHECK_WRITABLE:U} is "" (eval, none, defined)
Global:.OBJDIR = <curdir>
Global:delete .PATH (not found)
Global:.PATH = .
Global:.PATH = . <curdir>
Global:.TARGETS = 
Internal:MAKEFILE = varname-empty.mk
Global:.MAKE.MAKEFILES = varname-empty.mk
Global:.PARSEFILE = varname-empty.mk
Global:delete .INCLUDEDFROMDIR (not found)
Global:delete .INCLUDEDFROMFILE (not found)
Var_Set("", "default", ...) name expands to empty string - ignored
Var_Set("", "assigned", ...) name expands to empty string - ignored
SetVar: variable name is empty - ignored
Var_Set("", "", ...) name expands to empty string - ignored
Var_Set("", "subst", ...) name expands to empty string - ignored
Var_Set("", "shell-output", ...) name expands to empty string - ignored
Var_Parse: ${:Ufallback} != "fallback" (eval-defined)
Applying ${:U...} to "" (eval-defined, none, undefined)
Result of ${:Ufallback} is "fallback" (eval-defined, none, defined)
Var_Parse: ${:U} (eval)
Applying ${:U} to "" (eval, none, undefined)
Result of ${:U} is "" (eval, none, defined)
Var_Set("${:U}", "assigned indirectly", ...) name expands to empty string - ignored
Var_Parse: ${:Ufallback} != "fallback" (eval-defined)
Applying ${:U...} to "" (eval-defined, none, undefined)
Result of ${:Ufallback} is "fallback" (eval-defined, none, defined)
Var_Parse: ${:U} (eval)
Applying ${:U} to "" (eval, none, undefined)
Result of ${:U} is "" (eval, none, defined)
Var_Append("${:U}", "appended indirectly", ...) name expands to empty string - ignored
Var_Parse: ${:Ufallback} != "fallback" (eval-defined)
Applying ${:U...} to "" (eval-defined, none, undefined)
Result of ${:Ufallback} is "fallback" (eval-defined, none, defined)
Global:.MAKEFLAGS =  -r -d v -d
Global:.MAKEFLAGS =  -r -d v -d 0
out: fallback
out: 1 2 3
exit status 0
