.\"	$NetBSD: rename.2,v 1.33 2015/01/27 10:11:20 wiz Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)rename.2	8.1 (Berkeley) 6/4/93
.\"
.Dd July 28, 2013
.Dt RENAME 2
.Os
.Sh NAME
.Nm rename ,
.Nm renameat
.Nd change the name of a file
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In stdio.h
.Ft int
.Fn rename "const char *from" "const char *to"
.In unistd.h
.Ft int
.Fn renameat "int fromfd" "const char *from" "int tofd" "const char *to"
.Sh DESCRIPTION
.Fn rename
causes the link named
.Fa from
to be renamed as
.Fa to .
If
.Fa to
exists, it is first removed.
Both
.Fa from
and
.Fa to
must be of the same type (that is, both directories or both
non-directories), and must reside on the same file system.
.Pp
.Fn rename
guarantees that an instance of
.Fa to
will always exist, even if the system should crash in
the middle of the operation.
.Pp
If the final component of
.Fa from
is a symbolic link,
the symbolic link is renamed,
not the file or directory to which it points.
.Pp
If both
.Fa from
and
.Fa to
are pathnames of the same existing file in the file system's name space,
.Fn rename
returns successfully and performs no other action.
.Pp
.Fn renameat
works the same way as
.Fn rename
except if
.Fa from
(resp.
.Fa to )
is relative.
In that case, it is looked up from a directory whose file
descriptor was passed as
.Fa fromfd
(resp.
.Fa tofd ) .
Search permission is required on the directories named by
.Fa fromfd
and
.Fa tofd .
.\"    (These alternatives await a decision about the semantics of O_SEARCH)
.\" Search permission is required on the directories named by
.\" .Fa fromfd
.\" and
.\" .Fa tofd
.\" unless they were opened with the
.\" .Dv O_SEARCH
.\" flag.
.\"    - or -
.\" The directories named by
.\" .Fa fromfd
.\" and
.\" .Fa tofd
.\" must have been opened with the
.\" .Dv O_SEARCH
.\" flag.
.Fa fromfd
or
.Fa tofd
can be set to
.Dv AT_FDCWD
in order to specify the current directory.
.Sh RETURN VALUES
.Rv -std rename renameat
.Sh ERRORS
.Fn rename
and
.Fn renameat
will fail and neither of the argument files will be
affected if:
.Bl -tag -width Er
.It Bq Er EACCES
A component of either path prefix denies search permission, or
the requested link requires writing in a directory with a mode
that denies write permission.
.It Bq Er EBUSY
.Fa from
or
.Fa to
is the mount point for a mounted file system.
.It Bq Er EDQUOT
The directory in which the entry for the new name
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.It Bq Er EFAULT
.Fa from
or
.Fa to
points outside the process's allocated address space.
.It Bq Er EINVAL
.Fa from
is a parent directory of
.Fa to ,
or an attempt is made to rename
.Ql \&.
or
.Ql \&.. .
.It Bq Er EIO
An I/O error occurred while making or updating a directory entry.
.It Bq Er EISDIR
.Fa to
is a directory, but
.Fa from
is not a directory.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating either pathname.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Brq Dv NAME_MAX
characters, or an entire path name exceeded
.Brq Dv PATH_MAX
characters.
.It Bq Er ENOENT
A component of the
.Fa from
path does not exist,
or a path prefix of
.Fa to
does not exist.
.It Bq Er ENOSPC
The directory in which the entry for the new name is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.It Bq Er ENOTDIR
A component of either path prefix is not a directory, or
.Fa from
is a directory, but
.Fa to
is not a directory.
.It Bq Er ENOTEMPTY
.Fa to
is a directory and is not empty.
.It Bq Er EPERM
The directory containing
.Fa from
is marked sticky,
and neither the containing directory nor
.Fa from
are owned by the effective user ID.
Or the
.Fa to
file exists,
the directory containing
.Fa to
is marked sticky,
and neither the containing directory nor
.Fa to
are owned by the effective user ID.
.It Bq Er EROFS
The requested link requires writing in a directory on a read-only file
system.
.It Bq Er EXDEV
The link named by
.Fa to
and the file named by
.Fa from
are on different logical devices (file systems).
Note that this error code will not be returned if the implementation
permits cross-device links.
.El
.Pp
In addition,
.Fn renameat
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa from
or
.Fa to
does not specify an absolute path and
.Fa fromfd
or
.Fa tofd ,
respectively, is neither
.Dv AT_FDCWD
nor a valid file descriptor open for reading or searching.
.It Bq Er ENOTDIR
.Fa from
or
.Fa to
is not an absolute path and
.Fa fromfd
or
.Fa tofd ,
respectively, is a file descriptor associated with a non-directory file.
.El
.Sh SEE ALSO
.Xr open 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn rename
function deviates from the semantics defined in
.St -p1003.1-90 ,
which specifies that if both
.Fa from
and
.Fa to
.Em link
to the same existing file,
.Fn rename
shall return successfully and performs no further action, whereas this
implementation will remove the file specified by
.Fa from
unless both
.Fa from
and
.Fa to
are pathnames of the same file in the file system's name space.
.Pp
To retain conformance, a compatibility interface is provided by the
.Lb libposix
which is also be brought into scope if any of the
.Dv _POSIX_SOURCE ,
.Dv _POSIX_C_SOURCE
or
.Dv _XOPEN_SOURCE
preprocessor symbols are defined at compile-time:
the
.Fn rename
function conforms to
.St -p1003.1-90
and
.St -xpg4.2 .
.Fn renameat
conforms to
.St -p1003.1-2008 .
.Sh BUGS
The system can deadlock if a loop in the file system graph is present.
This loop takes the form of an entry in directory
.Ql Pa a ,
say
.Ql Pa a/foo ,
being a hard link to directory
.Ql Pa b ,
and an entry in
directory
.Ql Pa b ,
say
.Ql Pa b/bar ,
being a hard link
to directory
.Ql Pa a .
When such a loop exists and two separate processes attempt to
perform
.Ql rename a/foo b/bar
and
.Ql rename b/bar a/foo ,
respectively,
the system may deadlock attempting to lock
both directories for modification.
Hard links to directories should be
replaced by symbolic links by the system administrator.
