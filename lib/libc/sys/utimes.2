.\"	$NetBSD: utimes.2,v 1.30 2011/10/25 09:26:53 wiz Exp $
.\"
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)utimes.2	8.1 (Berkeley) 6/4/93
.\"
.Dd August 17, 2011
.Dt UTIMES 2
.Os
.Sh NAME
.Nm utimes ,
.Nm lutimes ,
.Nm futimes ,
.Nm futimens ,
.Nm utimensat
.Nd set file access and modification times
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/time.h
.Ft int
.Fn utimes "const char *path" "const struct timeval times[2]"
.Ft int
.Fn lutimes "const char *path" "const struct timeval times[2]"
.Ft int
.Fn futimes "int fd" "const struct timeval times[2]"
.Ft int
.Fn futimens "int fd" "const struct timespec times[2]"
.Ft int
.Fn utimensat "int fd" "const char *path" "const struct timespec times[2]" "int flag"
.Sh DESCRIPTION
The access and modification times of the file named by
.Fa path
or referenced by
.Fa fd
are changed as specified by the argument
.Fa times .
.Pp
If
.Fa times
is
.Dv NULL ,
the access and modification times are set to the current time.
The caller must be the owner of the file, have permission to
write the file, or be the super-user.
.Pp
If
.Fa times
is
.Pf non- Dv NULL ,
it is assumed to point to an array of two timeval structures.
The access time is set to the value of the first element, and the
modification time is set to the value of the second element.
For file systems that support file birth (creation) times (such as
UFS2), the birth time will be set to the value of the second element
if the second element is older than the currently set birth time.
To set both a birth time and a modification time, two calls are
required; the first to set the birth time and the second to set
the (presumably newer) modification time.
Ideally a new system call will be added that allows the setting of
all three times at once.
The caller must be the owner of the file or be the super-user.
.Pp
In either case, the inode-change-time of the file is set to the current
time.
.Pp
.Fn lutimes
is like
.Fn utimes
except in the case where the named file is a symbolic link,
in which case
.Fn lutimes
changes the access and modification times of the link,
while
.Fn utimes
changes the times of the file the link references.
.Pp
.Fn futimens
is like
.Fn futimes
except that time is specified with nanosecond instead of microseconds.
.Pp
.Fn utimensat
also allows time to be specifed with nanoseconds.
When it operates on a symbolic link, it will change the target's time if
.Ar follow
is unset.
If
.Ar follow
is set to
.Dv AT_SYMLINK_NOFOLLOW ,
the symbolic link's dates are changed.
.Pp
The nanosecond fields for
.Fn futimens
and
.Fn utimensat
can be set to the special value
.Dv UTIME_NOW
to set the current time, or to
.Dv UTIME_OMIT
to let the time unchanged (this allows changing access time but not
modification time, and vice-versa).
.Pp
.Fn utimensat
is partially implemented.
It will return
.Er ENOSYS
for
.Fa fd
values different than
.Dv AT_FDCWD .
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn utimes ,
.Fn lutimes ,
and
.Fn utimensat
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix;
or the
.Fa times
argument is
.Dv NULL
and the effective user ID of the process does not
match the owner of the file, and is not the super-user, and write
access is denied.
.It Bq Er EFAULT
.Fa path
or
.Fa times
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading or writing the affected inode.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Brq Dv NAME_MAX
characters, or an entire path name exceeded
.Brq Dv PATH_MAX
characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er EPERM
The
.Fa times
argument is not
.Dv NULL
and the calling process's effective user ID
does not match the owner of the file and is not the super-user.
.It Bq Er EROFS
The file system containing the file is mounted read-only.
.El
.Pp
.Fn futimes
and
.Fn futimens
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The
.Fa times
argument is
.Dv NULL
and the effective user ID of the process does not
match the owner of the file, and is not the super-user, and write
access is denied.
.It Bq Er EBADF
.Fa fd
does not refer to a valid descriptor.
.It Bq Er EFAULT
.Fa times
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading or writing the affected inode.
.It Bq Er EPERM
The
.Fa times
argument is not
.Dv NULL
and the calling process's effective user ID
does not match the owner of the file and is not the super-user.
.It Bq Er EROFS
The file system containing the file is mounted read-only.
.El
.Sh SEE ALSO
.Xr stat 2 ,
.Xr utime 3 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn utimes
function conforms to
.St -p1003.1-2001 .
It was however marked as legacy in the
.St -p1003.1-2004
revision.
.Fn futimens
and
.Fn utimensat
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn utimes
function call appeared in
.Bx 4.2 .
The
.Fn futimes
function call appeared in
.Nx 1.2 .
The
.Fn lutimes
function call appeared in
.Nx 1.3 .
Birthtime setting support was added in
.Nx 5.0 .
.Fn futimens
and
.Fn utimensat
functions calls appreared in
.Nx 6.0 .
.Sh BUGS
.Fn utimensat
is partially implemented.
