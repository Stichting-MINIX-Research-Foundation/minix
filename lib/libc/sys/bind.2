.\"	$NetBSD: bind.2,v 1.29 2015/04/05 20:41:05 wiz Exp $
.\"
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)bind.2	8.1 (Berkeley) 6/4/93
.\"
.Dd April 5, 2015
.Dt BIND 2
.Os
.Sh NAME
.Nm bind
.Nd bind a name to a socket
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/socket.h
.Ft int
.Fn bind "int s" "const struct sockaddr *name" "socklen_t namelen"
.Sh DESCRIPTION
.Fn bind
assigns a name to an unnamed socket.
When a socket is created
with
.Xr socket 2
it exists in a name space (address family)
but has no name assigned.
.Fn bind
requests that
.Fa name
be assigned to the socket.
.Fa namelen
indicates the amount of space pointed to by
.Fa name ,
in bytes.
.Sh NOTES
Binding a name in the
.Ux
domain creates a socket in the file
system that must be deleted by the caller when it is no longer
needed (using
.Xr unlink 2 ) .
.Pp
The rules used in name binding vary between communication domains.
Consult the manual entries in section 4 for detailed information.
.Sh RETURN VALUES
If the bind is successful, a 0 value is returned.
A return value of \-1 indicates an error, which is
further specified in the global
.Va errno .
.Sh ERRORS
The
.Fn bind
call will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The requested address is protected, and the current user
has inadequate permission to access it.
.It Bq Er EADDRINUSE
The specified address is already in use.
.It Bq Er EADDRNOTAVAIL
The specified address is not available from the local machine.
.It Bq Er EAFNOSUPPORT
Addresses in the specified address family cannot be used with this socket.
.It Bq Er EBADF
.Fa s
is not a valid descriptor.
.It Bq Er EFAULT
The
.Fa name
parameter is not in a valid part of the user
address space.
.It Bq Er EINVAL
The socket is already bound to an address; or
the family of the socket and that requested in
.Fa name-\*[Gt]sa_family
are not equivalent.
.It Bq Er ENOTSOCK
.Fa s
is not a socket.
.El
.Pp
The following errors are specific to binding names in the
.Ux
domain.
.Bl -tag -width Er
.It Bq Er EIO
An I/O error occurred while making the directory entry or allocating the inode.
.It Bq Er EISDIR
An empty pathname was specified.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Brq Dv NAME_MAX
characters, or an entire path name exceeded
.Brq Dv PATH_MAX
characters.
.It Bq Er ENOENT
A prefix component of the path name does not exist.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er EROFS
The name would reside on a read-only file system.
.El
.Sh SEE ALSO
.Xr connect 2 ,
.Xr getsockname 2 ,
.Xr listen 2 ,
.Xr socket 2
.Sh HISTORY
The
.Fn bind
function call appeared in
.Bx 4.2 .
.Sh SECURITY CONSIDERATIONS
.Fn bind
was changed in
.Nx 1.4
to prevent the binding of a socket to the same port as an existing
socket when all of the following is true:
.Bl -bullet -compact -offset indent
.It
either of the existing or new addresses is
.Li INADDR_ANY ,
.It
the uid of the new socket is not root, and
the uids of the creators of the sockets are different,
.It
the address is not a multicast address, and
.It
both sockets are not bound to
.Li INADDR_ANY
with
.Li SO_REUSEPORT
set.
.El
.Pp
This prevents an attack where a user could bind to a port with
the host's IP address (after setting
.Li SO_REUSEADDR )
and
.Sq steal
packets destined for a server that bound to the
same port with
.Li INADDR_ANY .
.Pp
.Fn bind
was changed in
.Nx 4.0
to honor the user's umask when binding sockets in the local domain.
This was done to match the behavior of other operating systems,
including
.Fx ,
.Ox ,
and
Linux, and to improve compatibility with some third-party software.
Please note that this behavior
.Em is not portable .
If you must bind a local socket in a portable and secure way, you need
to make a directory with tight permissions and then create the socket
inside it.
