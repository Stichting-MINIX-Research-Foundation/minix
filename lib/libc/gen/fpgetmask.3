.\"	$NetBSD: fpgetmask.3,v 1.12 2011/03/27 22:55:07 wiz Exp $
.\"
.\" Copyright (c) 1999 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Ross Harvey.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd March 26, 2011
.Dt FPGETMASK 3
.Os
.Sh NAME
.Nm fpgetmask ,
.Nm fpgetprec ,
.Nm fpgetround ,
.Nm fpgetsticky ,
.Nm fpsetmask ,
.Nm fpsetprec ,
.Nm fpsetround ,
.Nm fpsetsticky
.Nd IEEE FP mode control
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In ieeefp.h
.Ft fp_except_t
.Fn fpgetmask void
.Ft fp_prec_t
.Fn fpgetprec void
.Ft fp_rnd_t
.Fn fpgetround void
.Ft fp_except_t
.Fn fpgetsticky void
.Ft fp_except_t
.Fn fpsetmask "fp_except_t mask"
.Ft fp_prec_t
.Fn fpsetprec "fp_prec_t prec"
.Ft fp_rnd_t
.Fn fpsetround "fp_rnd_t rnd_dir"
.Ft fp_except_t
.Fn fpsetsticky "fp_except_t sticky"
.Sh DESCRIPTION
A rounding mode
.Ft fp_rnd_t
is one of:
.Bl -column -offset indent FP_RZ
.It Dv FP_RZ Ta rounding towards Em zero
.It Dv FP_RM Ta rounding down to Pq Em Minus infinity
.It Dv FP_RN Ta rounding to Em nearest
.It Dv FP_RP Ta rounding down to Pq Em Plus infinity
.El
The default mode is
.Dv FP_RN .
.Pp
An
.Ft fp_except_t
value is a bitmask specifying an exception type and containing any of
the values listed below.
.Bl -column -offset indent FP_X_UFLxx
.It Dv FP_X_INV Ta Invalid\ Operation
.It Dv FP_X_DZ Ta Division\ by\ zero
.It Dv FP_X_OFL Ta Overflow
.It Dv FP_X_UFL Ta Underflow
.It Dv FP_X_IMP Ta Imprecision (inexact)
.It Dv FP_X_IOV Ta Integer\ Overflow
.El
.Pp
An
.Ft fp_prec_t
specifies the precision of the floating point operations listed below.
.Bl -column -offset indent FP_RPS
.It Dv FP_PS Ta Dv 24 bit (single-precision)
.It Dv FP_PRS Ta reserved
.It Dv FP_PD Ta Dv 53 bit (double-precision)
.It Dv FP_PE Ta Dv 64 bit (extended-precision)
.El
.Pp
The
.Fn fpsetmask
function will set the current exception mask, i.e., it will cause
future operations with the specified result status to raise the
.Dv SIGFPE
exception.
The
.Fn fpgetmask
function will return the current exception mask.
.Pp
The
.Fn fpgetprec
function will return the current floating point precision.
The
.Fn fpsetprec
function will set the floating point precision and will return
the previous precision.
.Pp
The
.Fn fpsetround
function will cause future operations to use the specified dynamic
rounding mode.
The
.Fn fpgetround
function will return the current rounding mode.
.Bl -tag -width Note:x
.It Em Note :
On some architectures, instructions can optionally specify static
rounding modes and exception enables that will supersede the specified
dynamic mode.
On other architectures, these features may not be fully supported.
.El
.Pp
A
.Dq sticky
status word may be maintained in which a bit is set every time an
exceptional floating point condition is encountered, whether or not a
.Dv SIGFPE
is generated.
The
.Fn fpsetsticky
function will set or clear the specified exception history bits.
The
.Fn fpgetsticky
function will return the exception history bits.
.Sh RETURN VALUES
The
.Fn fpgetround
and
.Fn fpsetround
functions return the
.Pq previous
rounding mode.
The
.Fn fpgetmask ,
.Fn fpsetmask ,
.Fn fpgetsticky ,
and
.Fn fpsetsticky
functions return the
.Pq previous
exception mask and exception history bits.
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr fenv 3
.Sh BUGS
There is no way to return an unsupported value.
Not all processors support all the modes.
These interfaces are deprecated and the ones
in
.Xr fenv 3
should be used, although the interfaces in
.Xr fenv 3
don't support getting or setting the precision.
