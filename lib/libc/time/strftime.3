.\" Copyright (c) 1989, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)strftime.3	5.12 (Berkeley) 6/29/91
.\"	$NetBSD: strftime.3,v 1.29 2012/04/06 11:35:39 wiz Exp $
.\"
.Dd April 14, 2011
.Dt STRFTIME 3
.Os
.Sh NAME
.Nm strftime ,
.Nm strftime_z
.Nd format date and time
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In time.h
.Ft size_t
.Fn strftime "char * restrict buf" "size_t maxsize" "const char * restrict format" "const struct tm * restrict timeptr"
.Ft size_t
.Fn strftime_z "const timezone_t tz" "char * restrict buf" "size_t maxsize" "const char * restrict format" "const struct tm * restrict timeptr"
.Sh DESCRIPTION
The
.Fn strftime
function formats the information from
.Fa timeptr
into the buffer
.Fa buf
according to the string pointed to by
.Fa format .
.Pp
The
.Fa format
string consists of zero or more conversion specifications and
ordinary characters.
All ordinary characters are copied directly into the buffer.
A conversion specification consists of a percent sign
.Ql %
and one other character.
.Pp
No more than
.Fa maxsize
characters will be placed into the array.
If the total number of resulting characters, including the terminating
null character, is not more than
.Fa maxsize ,
.Fn strftime
returns the number of characters in the array, not counting the
terminating null.
Otherwise, zero is returned and the contents of the array are undefined.
.Pp
Each conversion specification is replaced by the characters as
follows which are then copied into the buffer.
.Bl -tag -width "xxxx"
.It Cm \&%A
is replaced by the locale's full weekday name.
.It Cm %a
is replaced by the locale's abbreviated weekday name.
.It Cm \&%B
is replaced by the locale's full month name.
.It Cm \&%b No or Cm \&%h
is replaced by the locale's abbreviated month name.
.It Cm \&%C
is replaced by the century (a year divided by 100 and truncated to an integer)
as a decimal number [00,99].
.It Cm \&%c
is replaced by the locale's appropriate date and time representation.
.It Cm \&%D
is replaced by the date in the format
.Dq Li %m/%d/%y .
.It Cm \&%d
is replaced by the day of the month as a decimal number [01,31].
.It Cm \&%e
is replaced by the day of month as a decimal number [1,31];
single digits are preceded by a blank.
.It Cm \&%F
is replaced by the date in the format
.Dq Li %Y-%m-%d
(the ISO 8601 date format).
.It Cm \&%G
is replaced by the ISO 8601 year with century as a decimal number.
.It Cm \&%g
is replaced by the ISO 8601 year without century as a decimal number (00-99).
This is the year that includes the greater part of the week.
(Monday as the first day of a week).
See also the
.Ql \&%V
conversion specification.
.It Cm \&%H
is replaced by the hour (24-hour clock) as a decimal number [00,23].
.It Cm \&%I
is replaced by the hour (12-hour clock) as a decimal number [01,12].
.It Cm \&%j
is replaced by the day of the year as a decimal number [001,366].
.It Cm \&%k
is replaced by the hour (24-hour clock) as a decimal number [0,23];
single digits are preceded by a blank.
.It Cm \&%l
is replaced by the hour (12-hour clock) as a decimal number [1,12];
single digits are preceded by a blank.
.It Cm \&%M
is replaced by the minute as a decimal number [00,59].
.It Cm %m
is replaced by the month as a decimal number [01,12].
.It Cm %n
is replaced by a newline.
.It Cm %p
is replaced by the locale's equivalent of either
.Dq Tn AM
or
.Dq Tn PM .
.It Cm \&%R
is replaced by the time in the format
.Dq Li %H:%M .
.It Cm \&%r
is replaced by the locale's representation of 12-hour clock time
using AM/PM notation.
.It Cm \&%S
is replaced by the second as a decimal number [00,61].
The range of
seconds is (00-61) instead of (00-59) to allow for the periodic occurrence
of leap seconds and double leap seconds.
.It Cm %s
is replaced by the number of seconds since the Epoch, UTC (see
.Xr mktime 3 ) .
.It Cm \&%T
is replaced by the time in the format
.Dq Li %H:%M:%S .
.It Cm \&%t
is replaced by a tab.
.It Cm \&%U
is replaced by the week number of the year (Sunday as the first day of
the week) as a decimal number [00,53].
.It Cm \&%u
is replaced by the weekday (Monday as the first day of the week)
as a decimal number [1,7].
.It Cm \&%V
is replaced by the week number of the year (Monday as the first day of
the week) as a decimal number [01,53]. According to ISO 8601 the week
containing January 1 is week 1 if it has four or more days in the new year,
otherwise it is week 53 of the previous year, and the next week is week 1.
The year is given by the
.Ql \&%G
conversion specification.
.It Cm \&%v
is replaced by the date in the format
.Dq Li %e-%b-%Y .
.It Cm \&%W
is replaced by the week number of the year (Monday as the first day of
the week) as a decimal number [00,53].
.It Cm \&%w
is replaced by the weekday (Sunday as the first day of the week)
as a decimal number [0,6].
.It Cm \&%X
is replaced by the locale's appropriate time representation.
.It Cm \&%x
is replaced by the locale's appropriate date representation.
.It Cm \&%Y
is replaced by the year with century as a decimal number.
.It Cm \&%y
is replaced by the year without century as a decimal number [00,99].
.It Cm \&%Z
is replaced by the time zone name.
.It Cm \&%z
is replaced by the offset from UTC in the ISO 8601 format
.Dq Li [-]hhmm .
.It Cm %%
is replaced by
.Ql % .
.El
.Pp
The
.Fn strftime_z
function is similar to
.Fn strftime ,
but it also takes a
.Ft "const timezone_t"
.Fa tz
argument.
.Sh SEE ALSO
.Xr date 1 ,
.Xr printf 1 ,
.Xr ctime 3 ,
.Xr printf 3 ,
.Xr strptime 3 ,
.Xr tm 3
.Sh STANDARDS
The
.Fn strftime
function
conforms to
.St -isoC-99 .
The
.Ql \&%C ,
.Ql \&%D ,
.Ql \&%e ,
.Ql \&%g ,
.Ql \&%G ,
.Ql \&%h ,
.Ql \&%k ,
.Ql \&%l ,
.Ql \&%n ,
.Ql \&%r ,
.Ql \&%R ,
.Ql \&%s ,
.Ql \&%t ,
.Ql \&%T ,
.Ql \&%u ,
.Ql \&%V ,
and
.Ql \&%v
conversion specifications are extensions.
.Pp
Use of the ISO 8601 conversions may produce non-intuitive results.
Week 01 of a year is per definition the first week which has the Thursday
in this year, which is equivalent to the week which contains the fourth
day of January.
In other words, the first week of a new year is the week which has the
majority of its days in the new year.
Week 01 might also contain days from the previous year and the week
before week 01 of a year is the last week (52 or 53) of the previous
year even if it contains days from the new year.
A week starts with Monday (day 1) and ends with Sunday (day 7).
For example, the first week of the year 1997 lasts from
1996-12-30 to 1997-01-05.
.Sh BUGS
There is no conversion specification for the phase of the moon.
.Pp
A return value of zero does not necessarily indicate an error.
If the resulting string is an empty string, the result value is
zero and it is not possible to distinguish between success and error.
For example, in many locales
.Cm \&%p
yields an empty string.
This problem can be avoided by inserting an extra space at the
beginning of the format string and then skipping over it or removing
it from the result.
