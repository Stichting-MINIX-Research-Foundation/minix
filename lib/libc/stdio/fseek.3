.\"	$NetBSD: fseek.3,v 1.27 2012/01/22 19:13:42 wiz Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fseek.3	8.1 (Berkeley) 6/4/93
.\"
.Dd January 21, 2012
.Dt FSEEK 3
.Os
.Sh NAME
.Nm fgetpos ,
.Nm fseek ,
.Nm fseeko ,
.Nm fsetpos ,
.Nm ftell ,
.Nm ftello ,
.Nm rewind
.Nd reposition a stream
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In stdio.h
.Ft int
.Fn fseek "FILE *stream" "long int offset" "int whence"
.Ft int
.Fn fseeko "FILE *stream" "off_t offset" "int whence"
.Ft long int
.Fn ftell "FILE *stream"
.Ft off_t
.Fn ftello "FILE *stream"
.Ft void
.Fn rewind "FILE *stream"
.Ft int
.Fn fgetpos "FILE * restrict stream" "fpos_t * restrict pos"
.Ft int
.Fn fsetpos "FILE * restrict stream" "const fpos_t * restrict pos"
.Sh DESCRIPTION
The
.Fn fseek
function sets the file position indicator for the stream pointed
to by
.Fa stream .
The new position, measured in bytes, is obtained by adding
.Fa offset
bytes to the position specified by
.Fa whence .
If
.Fa whence
is set to
.Dv SEEK_SET ,
.Dv SEEK_CUR ,
or
.Dv SEEK_END ,
the offset is relative to the
start of the file, the current position indicator, or end-of-file,
respectively.
A successful call to the
.Fn fseek
function clears the end-of-file indicator for the stream and undoes
any effects of the
.Xr ungetc 3
function on the same stream.
.Pp
The
.Fn fseeko
function is identical to the
.Fn fseek
function except that the
.Fa offset
argument is of type
.Fa off_t .
.Pp
The
.Fn ftell
function
obtains the current value of the file position indicator for the
stream pointed to by
.Fa stream .
.Pp
The
.Fn ftello
function is identical to the
.Fn ftell
function except that the return value is of type
.Fa off_t .
.Pp
The
.Fn rewind
function sets the file position indicator for the stream pointed
to by
.Fa stream
to the beginning of the file.
It is equivalent to:
.Pp
.Dl (void)fseek(stream, 0L, SEEK_SET)
.Pp
except that the error indicator for the stream is also cleared
(see
.Xr clearerr 3 ) .
.Pp
In this implementations, an
.Dq Fa fpos_t
object is a complex object that represents both the position and the parse
state of the stream making these routines are the only way to portably
reposition a text stream.
The
.Ar pos
argument of
.Fn fsetpos
must always be initialized by
a call to
.Fn fgetpos .
.Sh RETURN VALUES
The
.Fn rewind
function
returns no value.
Upon successful completion,
.Fn fgetpos ,
.Fn fseek ,
.Fn fseeko ,
and
.Fn fsetpos
return 0.
The functions
.Fn ftell
and
.Fn ftello
return the current offset.
Otherwise,
.Fn fseek ,
.Fn fseeko ,
.Fn ftell ,
and
.Fn ftello
return \-1 while
.Fn fgetpos
and
.Fn fsetpos
return a nonzero value.
On error all functions the global variable
.Va errno
is set to indicate the error.
Since the
.Fn rewind
function does not return an error code, applications need to clear
.Va errno
before calling it in order to detect errors.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa stream
specified
is not a seekable stream.
.It Bq Er EINVAL
The
.Fa whence
argument to
.Fn fseek
was not
.Dv SEEK_SET ,
.Dv SEEK_END ,
or
.Dv SEEK_CUR .
.It Bq Er EOVERFLOW
For
.Fn ftell ,
the current file offset cannot be represented correctly in an object of type
.Fa long .
.El
.Pp
The function
.Fn fgetpos ,
.Fn fseek ,
.Fn fseeko ,
.Fn fsetpos ,
.Fn ftell ,
.Fn ftello ,
and
.Fn rewind
may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr fflush 3 ,
.Xr fstat 2 ,
.Xr lseek 2 ,
and
.Xr malloc 3 .
.Sh SEE ALSO
.Xr lseek 2
.Sh STANDARDS
The
.Fn fgetpos ,
.Fn fsetpos ,
.Fn fseek ,
.Fn ftell ,
and
.Fn rewind
functions
conform to
.St -ansiC .
The
.Fn fseeko
and
.Fn ftello
functions conform to
.St -xsh5 .
.Sh BUGS
The
.Fn fgetpos
and
.Fn fsetpos
functions don't store/set shift states of the stream in this implementation.
