.\" $NetBSD: stat_flags.3,v 1.7 2011/08/06 11:28:24 jruoho Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Christos Zoulas.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd August 6, 2011
.Dt STAT_FLAGS 3
.Os
.Sh NAME
.Nm string_to_flags ,
.Nm flags_to_string
.Nd Stat flags parsing and printing functions
.Sh LIBRARY
.Lb libutil
.Sh SYNOPSIS
.In util.h
.Ft char *
.Fn flags_to_string "u_long flags" "const char *def"
.Ft int
.Fn string_to_flags "char **stringp" "u_long *setp" "u_long clrp"
.Sh DESCRIPTION
The
.Fn flags_to_string
and
.Fn string_to_flags
functions are used by
programs such as
.Xr ls 1 ,
.Xr mtree 8 ,
.Xr makefs 8 ,
etc., to parse and/or print the
.Dv st_flags field in the
.Xr stat 2
structure.
.Pp
They recognize the following flags:
.Bl -column -offset indent "uappnd " "SF_IMMUTABLE" "xxx"
.It Sy String Ta Sy Flag Ta Sy Description
.It Va arch Ta Dv SF_ARCHIVED Ta file is archived
.It Va nodump Ta Dv UF_NODUMP Ta do not dump file
.It Va opaque Ta Dv UF_OPAQUE Ta directory is opaque in union filesystems
.It Va sappnd Ta Dv SF_APPEND Ta writes to the file may only append
.It Va schg Ta Dv SF_IMMUTABLE Ta file cannot be changed; it is immutable
.It Va snap Ta Dv SF_SNAPSHOT Ta file is a snapshot inode
.It Va uappnd Ta Dv UF_APPEND Ta writes to the file may only append
.It Va uchg Ta Dv UF_IMMUTABLE Ta file cannot be changed; it is immutable
.El
.Pp
The
.Dv SF_APPEND
and
.Dv SF_IMMUTABLE
flags are for the superuser only, whereas
.Dv UF_APPEND
and
.Dv UF_IMMUTABLE
are for the user only.
.Pp
The
.Fn flags_to_string
function converts the bits set in the
.Fa flags
argument to a comma-separated string and returns it.
If no flags are set, then the
.Fa def
string is returned.
The returned string is allocated via
.Xr malloc 3
and it is the responsibility of the caller to
.Xr free 3
it.
.Pp
The
.Fn string_to_flags
function takes a
.Fa stringp
of space, comma, or tab separated flag names
and places their bit value on the
.Fa setp
argument.
If the flag name is prefixed by:
.Dq no ,
then the bit value is placed on the
.Fa clrp
argument.
.Sh RETURN VALUES
.Fn flags_to_string
returns the symbolic representation of flags, the default string, or
.Dv NULL
if allocation failed.
.Pp
.Fn string_to_flags
returns
.Dv 0
on success and
.Dv 1
if it fails to parse the string, setting
.Fa stringp
to point to the first string that it failed to parse.
.Sh SEE ALSO
.Xr chflags 2 ,
.Xr stat 2
